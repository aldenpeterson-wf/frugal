# Example frugal file. Frugal is a superset of Thrift, meaning this file can
# contain valid Thrift or Frugal-extended syntax.

/**
 * This docstring doesn't get added to the generated code because
 * it doesn't have the @ sign.
 */
const i64 DEFAULT_ID = -1

/**@
 * This docstring gets added to the generated code because it has
 * the @ sign.
 */
struct Event {
    /**@ ID is a unique identifier for an event. */
    1: i64 ID = DEFAULT_ID,

    /**@ Message contains the event payload. */
    2: string Message
}

exception AwesomeException {
    /**@ ID is a unique identifier for an awesome exception. */
    1: i64 ID,

    /**@ Reason contains the error message. */
    2: string Reason
}

/**@
 * This is a thrift service. Frugal will generate bindings that include 
 * a frugal Context for each service call.
 */
service Foo {
    /**@ Ping the server. */
    void ping(),

    /**@ Blah the server. */
    i64 blah(1:i32 num, 2:string Str, 3:Event event) throws (1:AwesomeException awe),

    async i64 asyncBlah(1:i32 num, 2:string str, 3:Event event) throws (1:AwesomeException awe),
}

/**@
 * This docstring gets added to the generated code because it has
 * the @ sign.
 */
scope Events {
    /** Prefix specifies topic prefix tokens, which can be static or variable. */
    prefix "foo.{user}"

    /**@ This is a docstring. */
    EventCreated: Event // Inline comments are also supported
}
